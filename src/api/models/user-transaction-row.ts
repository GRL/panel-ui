/* tslint:disable */
/* eslint-disable */
/**
 * General Research Full Service Brokerage API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

 /**
 * 
 *
 * @export
 * @interface UserTransactionRow
 */
export interface UserTransactionRow {

    /**
     * (USD cents) Positive is an increase in the user's wallet balance. For e.g.requesting a gift card would show as a negative amount.
     *
     * @type {any}
     * @memberof UserTransactionRow
     */
    amount: any;

    /**
     * The 'amount' with the payout_format applied. Can be displayed to the user.
     *
     * @type {any}
     * @memberof UserTransactionRow
     */
    amountString: any;

    /**
     * The product_user_id
     *
     * @type {any}
     * @memberof UserTransactionRow
     */
    bpuid: any;

    /**
     * This is the name of the cashout method.
     *
     * @type {any}
     * @memberof UserTransactionRow
     */
    description: any;

    /**
     * @type {any}
     * @memberof UserTransactionRow
     */
    id: any;

    /**
     *  The format describing the str representation of a payout. Typically, this would be displayed to a user. The payout_format is similar to python format string with a subset of functionality supported. Only float with a precision are supported along with an optional comma for a thousands separator. In addition, a mathematical operator can be applied, such as dividing by 100.  Examples are shown assuming payout = 100 (one dollar). - \"{payout*10:,.0f} Points\" -> \"1,000 Points\" - \"${payout/100:.2f}\" -> \"$1.00\" 
     *
     * @type {any}
     * @memberof UserTransactionRow
     */
    payoutFormat: any;

    /**
     *  - `PENDING` = PENDING  - `APPROVED` = APPROVED  - `REJECTED` = REJECTED  - `CANCELLED` = CANCELLED  - `FAILED` = FAILED  - `COMPLETE` = COMPLETE
     *
     * @type {any}
     * @memberof UserTransactionRow
     */
    status?: any;

    /**
     * @type {any}
     * @memberof UserTransactionRow
     */
    timestamp: any;

    /**
     *  - `TASK_COMPLETE` = TASK_COMPLETE  - `RECONCILE` = RECONCILE  - `CASHOUT` = CASHOUT  - `BONUS` = BONUS
     *
     * @type {any}
     * @memberof UserTransactionRow
     */
    type: any;
}
