/* tslint:disable */
/* eslint-disable */
/**
 * General Research Full Service Brokerage API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

 /**
 * Used in the Task Status API call when queried using a TSID (task status ID)  Note: the api response is a little different from the internal representation b/c:  - Include some old stuff: \"currency\": \"USD\", \"final_status\": 0,  - status_code_1 and status_code_2 use the enum NAME, not the value  - The status is the grpc's enum value, NOT the pydantic's  - payout, user_payout, and user_payout_string are not Nullable  - payout_format is null on list statuses
 *
 * @export
 * @interface TaskStatusResponseOut
 */
export interface TaskStatusResponseOut {

    /**
     * A unique identifier for the session
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    tsid: any;

    /**
     * The BP ID of the associated respondent
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    productId: any;

    /**
     * A unique identifier for each user, which is set by the Supplier
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    productUserId: any;

    /**
     * When the session was started
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    started: any;

    /**
     * When the session was finished
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    finished?: any;

    /**
     * The outcome of a session.   - 0 - UNKNOWN   - 1 - ENTER (the user has not yet returned)   - 2 - INCOMPLETE (the user failed)   - 3 - COMPLETE (the user completed the task)
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    status?: any;

    /**
     * The amount paid to the supplier, in integer USD cents
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    payout?: any;

    /**
     * If a payout transformation is configured on this account, this is the amount the user should earn, in integer USD cents
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    userPayout?: any;

    /**
     *  The format describing the str representation of a payout. Typically, this would be displayed to a user. The payout_format is similar to python format string with a subset of functionality supported. Only float with a precision are supported along with an optional comma for a thousands separator. In addition, a mathematical operator can be applied, such as dividing by 100.  Examples are shown assuming payout = 100 (one dollar). - \"{payout*10:,.0f} Points\" -> \"1,000 Points\" - \"${payout/100:.2f}\" -> \"$1.00\" 
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    payoutFormat?: any;

    /**
     * If a payout transformation is configured on this account, this is the amount to display to the user
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    userPayoutString?: any;

    /**
     * Any extra url params used in the offerwall request will be passed back here
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    kwargs?: any;

    /**
     * __High level status code for outcome of the session.__     This should only be NULL if the Status is ABANDON or TIMEOUT  Allowed values:   - __BUYER_FAIL__: User terminated in buyer survey  - __BUYER_QUALITY_FAIL__: User terminated in buyer survey for quality reasons  - __PS_FAIL__: User failed in marketplace's prescreener  - __PS_QUALITY__: User rejected by marketplace for quality reasons  - __PS_BLOCKED__: User is explicitly blocked by the marketplace. Note: on some marketplaces, users can have multiple PS_QUALITY terminations and still complete surveys.  - __PS_OVERQUOTA__: User rejected by marketplace for over quota  - __PS_DUPLICATE__: User rejected by marketplace for duplicate  - __GRS_FAIL__: The user failed within the GRS Platform  - __GRS_QUALITY_FAIL__: The user failed within the GRS Platform for quality reasons  - __GRS_ABANDON__: The user abandoned/timed out within the GRS Platform  - __PS_ABANDON__: The user abandoned/timed out within the marketplace's pre-screen system. Note: On most marketplaces, we have no way of distinguishing between this and BUYER_ABANDON. BUYER_ABANDON is used as the default, unless we know it is PS_ABANDON.  - __BUYER_ABANDON__: The user abandoned/timed out within the client survey  - __UNKNOWN__: The status code is not documented  - __COMPLETE__: The user completed the task successfully  - __MARKETPLACE_FAIL__: Something was wrong upon the user redirecting from the marketplace, e.g. no postback received, or url hashing failures.  - __SESSION_START_FAIL__: User failed before being sent into a marketplace  - __SESSION_CONTINUE_FAIL__: User failed between attempts  - __SESSION_START_QUALITY_FAIL__: User failed before being sent into a marketplace for \"security\" reasons  - __SESSION_CONTINUE_QUALITY_FAIL__: User failed between attempts for \"security\" reasons
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    statusCode1?: any;

    /**
     * __Status Detail__     This should be set if the Session.status_code_1 is SESSION_XXX_FAIL  Allowed values:   - __ENTRY_URL_MODIFICATION__: Unable to parse either the bucket_id, request_id, or nudge_id from the url  - __UNRECOGNIZED_IP__: The client's IP failed maxmind lookup, or we failed to store it for some reason  - __USER_IS_ANONYMOUS__: User is using an anonymous IP  - __USER_IS_BLOCKED__: User is blocked  - __USER_IS_RATE_LIMITED__: User is rate limited  - __UNRECOGNIZED_DEVICE__: The client's useragent was not categorized as desktop, mobile, or tablet  - __OFFERWALL_EXPIRED__: The user clicked after 5 min  - __INTERNAL_ERROR__: Something unexpected happened  - __OFFERWALL_COUNTRY_MISMATCH__: The user requested the offerwall for a different country than their IP address indicates  - __INVALID_BUCKET_ID__: The bucket id indicated in the url does not exist. This is likely due to the user clicking on a bucket for an offerwall that has already been refreshed.  - __NO_TASKS_AVAILABLE__: Not necessarily the user's fault. We thought we had surveys, but due to for e.g. the user entering on a different device than we thought, there really are none. If we get a lot of these, then that might indicate something is wrong.  - __ATTEMPT_IS_SUSPICIOUS__: The entrance attempt was flagged by GRLIQ as suspicious  - __GRLIQ_MISSING__: No GRLIQ forensics post was received
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    statusCode2?: any;

    /**
     * An adjusted_status is set if a session is adjusted by the marketplace     after the original return. A session can be adjusted multiple times.     This is the most recent status. If a session was originally a complete,     was adjusted to incomplete, then back to complete, the adjusted_status     will be None, but the adjusted_timestamp will be set to the most recent     change.  Allowed values:   - __ac__ *(ADJUSTED_TO_COMPLETE)*: Task was reconciled to complete  - __af__ *(ADJUSTED_TO_FAIL)*: Task was reconciled to incomplete  - __pa__ *(PAYOUT_ADJUSTMENT)*: The payout was changed. This applies to Sessions ONLY.
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    adjustedStatus?: any;

    /**
     * When the adjusted status was last set.
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    adjustedTimestamp?: any;

    /**
     * The new payout after adjustment.
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    adjustedPayout?: any;

    /**
     * The new user_payout after adjustment.
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    adjustedUserPayout?: any;

    /**
     * The new user_payout_string after adjustment.
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    adjustedUserPayoutString?: any;

    /**
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    currency?: any;

    /**
     * This is deprecated
     *
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    finalStatus?: any;

    /**
     * @type {any}
     * @memberof TaskStatusResponseOut
     */
    bpuid: any;
}
